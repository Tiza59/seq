#!/usr/bin/perl -w
use strict;
use re 'eval';

my($b, $k, $n) = @ARGV;

my $s = '0' x $n;
my $endb = $b - 1;
our($succeed, $fail) = (qr{}, qr{(?!)});
my $re = join '', '^(.+)', map(
	sprintf('(.+)(??{ ($%s lt $%s) ? $succeed : $fail })', $_ - 1, $_), 2 .. $k
), '\z';
our $good = qr{$re};

my($good_count, $bad_count) = (0, 0);
my $t0 = (times)[0];
while (1) {
	if ($s =~ $good) {
		++$good_count;
	} else {
		++$bad_count;
	}
	last unless $s =~ s{([^$endb])([$endb]*)\z}{
		($1 + 1) . ('0' x length($2))
	}e;
}
my $t1 = (times)[0];
printf "%s %s %s %s %s (%.2f)\n", $b, $k, $n, $good_count, $bad_count, $t1 - $t0;
