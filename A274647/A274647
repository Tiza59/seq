#!/opt/maths/bin/perl -w
use strict;

=head1 A274647: a Recaman-like sequence

a(0) = 0; a(n) = a(n-1) + kn, where k is chosen to be the first value of
(-1, 1, -2, 2, -3, ...) that yields a positive result not already seen.

A276342(n) is the inverse sequence: A276342(n) = k implies A274647(k) = n.

=cut

# Give occasional indications of the maximum value seen: whenever the
# highest value seen is at least $maxmult times the previous reported
# maximum.
my $maxmult = 1.5;

# Record and report the first occurrence of a(n) = x for all x <= $limall.
my $limall = 100;

# Stop after n = $maxiter.
my $maxiter = 1e9;

my $v = ''; # bit vector of seen values; reaches about 1GB at n=6.4e8.
my $maxseen = 0;
my @lim = ('-') x ($limall + 1);

my($n, $lastval) = (0, 0);
setval(0);
N: while (++$n <= $maxiter) {
    my $k = -1;
    while (1) {
        my $val = $lastval + $k * $n;
        if ($val > 0 && !testval($val)) {
            setval($val);
            $lastval = $val;
            next N;
        }
        if ($k < 0) {
            $k = -$k;       # try k = 7 after trying k = -7
        } else {
            $k = -$k - 1;   # try k = -8 after trying k = 7
        }
    }
}

sub testval {
    return vec($v, $_[0], 1);
}

sub setval {
    my $val = $_[0];
    vec($v, $val, 1) = 1;
    if ($val <= $limall) {
        $lim[$val] = $n;
        print "$n: first seen $val\n";
        # Show a range of the inverse sequence whenever we find a new value
        my $base = int(($val - 1) / 10) * 10 + 1;
        printf "base $base: [%s]\n", join ' ', @lim[$base..$base+9];
    }
    if ($val > $maxseen) {
        print "$n: new max $val\n";
        $maxseen = $val * $maxmult;
    }
}

__END__

base  1: [1 4 2 203 2597 3 5 16 14 12]
base 11: [10 8 6 97 15546 243575589 404450 23 404448 7]
base 21: [9 11 13 15 17 56 54 52 50 631]
base 31: [629 902 137 135 192 84974 84972 27 309411696 131]
base 41: [22 20 18 85 111320883 127 125 1299 41842 40]
base 51: [38 41839 41837 41835 10843 7825 78 76 33 2582]
base 61: [121610 19 21 631905525 26 24 70 68 887 1290]
base 71: [2577 19185511 611 19185509 30522 63 179 33733449 49 51]
base 81: [53 55 57 30516 30514 30512 44 110 37 39]
base 91: [25 32 30 28 218817 15522 218815 218813 253 598]

